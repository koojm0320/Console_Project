구현해야 할 것
1. 각 화면끼리의 상속, 연결
2. 메인 화면 출력	
4. 플레이어, 적군 도트 출력
4. 플레이어 이동
5. 보스 패턴 구현
6. 플레이어와 투사체 간 충돌 판정, 충돌 범위
7. 투사체 발사
8. 스테이지 선택
9. 쫄몹 랜덤 출현
10. 배경의 움직임
11. 아이템을 먹을 경우, 피격 시 애니메이션
12. 창 크기 설정, 배경화면
14. 몹들의 무작위성 움직임
14. 스테이지 클리어 시 정보 저장

메인 화면, 스테이지 선택 화면
메인 게임 배경화면
게임 스타트, 게임 오버
보스 출현
보스, 쫄몹 투사체 이펙트
엔딩 화면





클래스, 상속, enum, 사용자 정의 함수
템플릿(가능하면)
STL map, vector
setter, getter
포인터, 배열, 반목문, 조건문


printMenu();
		cin >> playerChoice;
		switch (playerChoice)
		{
		case 1:
			_stage = new Stage;
			_stage->MoveStage();
			system("cls");
			continue;

		case 2:
			explane();
			
			continue;

		case 3:
			break;
		
		default:
			cout << "잘못된 입력입니다." << endl;
			Sleep(2000);
			system("cls");
			continue;
		}
		cout << "게임을 종료합니다." << endl;
		return;

======================================================================
다음 주 월요일 수업시작 전까지

- 중간점검 결과물 제출

- 메일로 제출
ㄴ 메일 제목: 언리얼 1기_콘솔 중간점검_구진모
ㄴ 압축 파일명: 언리얼 1기_콘솔 중간점검_구진모.zip
ㄴ 메일 내용: 현재 구현 완료 및 구현해야 할 내역 기입
ㄴ 영상 이름: 언리얼 1기_콘솔 중간점검_구진모.mp4

======================================================================

레이저

struct로 x,y,레이저 활성화

vector -> print laser, 프레임 계산해서 일정 프레임마다 pushback -> 레이저 출력

와들디도 같은 매커니즘

충돌 시 vector에서 삭제?
